{"version":3,"sources":["logo.svg","components/Show.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","setAppElement","Show","props","count","ip_address","localIpUrl","capture","img","webcamRef","getScreenshot","setState","prevState","imgSrc","date","Date","deviceId","MediaDeviceInfo","remove","image","state","splice","indexOf","forceUpdateHandler","modes","facingMode","exact","handleModal","prop","isModalOpen","modalIsOpen","setRef","this","forceUpdate","className","audio","ref","height","width","videoConstraints","screenshotFormat","onClick","style","marginTop","map","index","href","src","alt","download","isOpen","shouldCloseOnOverlayClick","onRequestClose","content","color","toString","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff693d7c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component} from 'react'\r\nimport Webcam from 'react-webcam'\r\nimport {SRLWrapper} from 'simple-react-lightbox'\r\nimport Modal from 'react-modal'\r\nimport localIpUrl from 'local-ip-url';\r\n\r\n\r\nModal.setAppElement('#root')\r\nclass Show extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            imgSrc : [],\r\n            count: false,\r\n            modalIsOpen: false,\r\n            facingMode: \"user\"\r\n        }\r\n        this.webcamRef = null;\r\n        this.setRef = (prop) => {\r\n            this.webcamRef = prop\r\n        }\r\n    };\r\n    count = 0\r\n    ip_address = localIpUrl('public', 'ipv4')\r\n    capture = () => {\r\n        const img = this.webcamRef.getScreenshot()\r\n        this.setState(prevState => {return (\r\n            {imgSrc:[...prevState.imgSrc, {img:img,date : new Date(), deviceId:MediaDeviceInfo.deviceId}]}\r\n        )})\r\n    }\r\n    forceUpdateHandler(){\r\n        this.forceUpdate();\r\n    }\r\n    remove = (image) => {\r\n        this.state.imgSrc.splice(this.state.imgSrc.indexOf(image), 1)\r\n        this.forceUpdateHandler()\r\n    }\r\n    modes = () =>{\r\n        this.state.count?  (this.setState({facingMode:\"user\", count:false})) : (this.setState({facingMode:{ exact: \"environment\" }, count : true}))\r\n              \r\n        // console.log(this.state.count)\r\n        // console.log(this.state.facingMode)\r\n    }\r\n    handleModal = (prop) => {\r\n        this.setState(prevState => {return {\r\n            ...prevState, isModalOpen:true\r\n        }})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <Webcam \r\n                    audio={false}\r\n                    ref={this.setRef}\r\n                    height={400}\r\n                    width={500}\r\n                    videoConstraints = {{\r\n                        facingMode: this.state.facingMode\r\n                    }}\r\n                    screenshotFormat=\"image/jpeg\"/>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <a className=\"waves-effect waves-light btn-small b1\" onClick={this.modes}><span className=\"material-icons\" style = {{marginTop:\"4px\"}}>cached</span></a>\r\n                    <p className=\"space\"></p>\r\n                    <a className=\"waves-effect waves-light btn-small b1\" onClick={this.capture}><span className=\"material-icons\" style = {{marginTop:\"4px\"}}>camera_enhance</span></a>\r\n                </div>\r\n\r\n                <SRLWrapper>\r\n                    <div className=\"flex-container scrollbar\">\r\n                        {\r\n                            this.state.imgSrc.map((image, index) => (\r\n                                <div className=\"show-image\" key={index}>\r\n                                    <a href={image.img}><img src={image.img} className=\"rounded img border border-info\" alt = \"\"/></a>\r\n                                    \r\n                                    <div className=\"dropup\">\r\n                                        <a href=\"#\" className=\"dropbtn\"><span className=\"material-icons\">more_vert</span></a>\r\n                                        <div className=\"dropup-content\">\r\n                                            <a href={image.img} download=\"image 101\"><span className=\"material-icons\">download</span></a>\r\n                                            <a href=\"#\" onClick={() => this.remove(image)}><span className=\"material-icons\">delete</span></a>\r\n                                            <a href=\"#\" onClick={() => this.handleModal(image)}><span className=\"material-icons\">info</span></a>\r\n                                            <div className=\"d-flex mx-auto\">\r\n                                                <Modal isOpen={this.state.isModalOpen} \r\n                                                shouldCloseOnOverlayClick={true} \r\n                                                onRequestClose={() => this.setState({isModalOpen:false})}\r\n                                                style={{\r\n                                                    content:{\r\n                                                        color:'black'\r\n                                                    }\r\n                                                }}\r\n                                                className=\"modal-content\">\r\n        \r\n                                                    <p>Date & time:  <strong>{image.date.toString()}</strong></p>\r\n                                                    <p>Ip Address: <strong>{this.ip_address}</strong></p>\r\n                                                    <button onClick={() => this.setState({isModalOpen:false})}>Close</button>\r\n                                                </Modal>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </SRLWrapper>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Show","import logo from './logo.svg';\nimport './App.css';\nimport Show from './components/Show'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Show />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport SimpleReactLightBox from 'simple-react-lightbox'\n\nReactDOM.render(\n  <React.StrictMode>\n    <SimpleReactLightBox>\n      <App />\n    </SimpleReactLightBox>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}